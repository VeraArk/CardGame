Проект «Карточная игра для изучающих иностранный язык». Пользователь может создавать, просматривать и удалять
карточки для изучения иностранных слов.
Каждая карточка будет содержать слово на изучаемом языке, его перевод и тему.

1. Обеспечить создание и хранение карточек для изучения иностраннх слов


2. Обеспечить:
-  создание  списка карточек в рамках одной игры (список карточек для конкретной игры)
-  хранение списка карточек в общем  репозитории
- хранение информации об игроках (идентификаия и история результатов игр)
- хранение списка карточек, созданных для отдельной игры (коллекция списков карточек для конкретных игр)

3. Запросы:
для карточек:
- передать все карточки.
- вернуть вернуть карточки конкретной игры.
- вернуть все карточки по теме.
- вернуть результаты игры.
- вернуть все результаты всех игры конкретного игрока

для студентов:
- создание и редактирование игрока.
- вернуть весь список игрков.
- вернуть список игроков по упределенному уровню

для игры :
- показывать созданные для игры карточки.
- получить результат

Entity:

Card
Student
Game
Result
ENUM ResultStatus


===================

Students

    Long id;
    String name;
    String email;
    String password;
    String level;


Card

      Long id;
      String question;
      String answer;
      String topic;
      String difficultyLevel;

Game

       Long id;
       LocalDateTime startTime;
       LocalDateTime endTime;
       Integer score;
       List<Card> cards;
       Long studentId;

Result

        Long id;

        Integer numbersOfCards;
        Integer numbersOfRightAnswer;
        ResultStatus status;


==================
DTO

Students

-StudentsCreateRequestDto
        String username;
        String password;


-StudentsCreateResponseDto

          Long id;
          String username;

Card

-CardCreateRequestDto
      String question;
      String answer;
      String topic;


-CardCreateResponseDto
      Long id;
      String question;
      String answer;
      String topic;


-CardResponseDto
      String question;
      String answer;

Game

-GameCreateRequestDto
    Long studentId;
    List<CardDTO> cards;

-GameCreateResponseDto
    Long id;
    LocalDateTime startTime;
    LocalDateTime endTime;
    Integer score;
    Student student;
    List<CardDTO> cards;

GameResponseDto
    Long id;
    Integer score;
    Student student;

==================
API

